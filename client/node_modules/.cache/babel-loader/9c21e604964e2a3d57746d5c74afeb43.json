{"ast":null,"code":"var _jsxFileName = \"/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/threads/ThreadList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport AddThread from './AddThread';\n\nclass ThreadList extends Component {\n  constructor() {\n    super();\n\n    this.getAllThreads = () => {\n      axios.get(`/api/threads`).then(responseFromApi => {\n        this.setState({\n          listOfThreads: responseFromApi.data\n        });\n      });\n    };\n\n    this.state = {\n      listOfThreads: []\n    };\n  }\n\n  componentDidMount() {\n    this.getAllThreads();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '60%',\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, this.state.listOfThreads.map(thread => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: thread._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/threads/${thread._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, thread.title)), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          maxWidth: '400px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, thread.description, \" \"));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '40%',\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Add New Thread\"), /*#__PURE__*/React.createElement(AddThread, {\n      getData: () => this.getAllThreads(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), \" \"));\n  }\n\n}\n\nexport default ThreadList;","map":{"version":3,"sources":["/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/threads/ThreadList.js"],"names":["React","Component","axios","Link","AddThread","ThreadList","constructor","getAllThreads","get","then","responseFromApi","setState","listOfThreads","data","state","componentDidMount","render","width","float","map","thread","_id","title","maxWidth","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,GAAE;AACT;;AADS,SAKbC,aALa,GAKG,MAAK;AACnBL,MAAAA,KAAK,CAACM,GAAN,CAAW,cAAX,EACCC,IADD,CACMC,eAAe,IAAI;AACvB,aAAKC,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAEF,eAAe,CAACG;AADnB,SAAd;AAGD,OALD;AAMD,KAZY;;AAET,SAAKC,KAAL,GAAa;AAAEF,MAAAA,aAAa,EAAE;AAAjB,KAAb;AACH;;AAWDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,aAAL;AACD;;AAEDS,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,KAAK,EAAC;AAArB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKJ,KAAL,CAAWF,aAAX,CAAyBO,GAAzB,CAA8BC,MAAM,IAAI;AACxC,0BAEE;AAAK,QAAA,GAAG,EAAEA,MAAM,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWD,MAAM,CAACC,GAAI,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,MAAM,CAACE,KAAb,CADF,CAFF,eAKE;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCH,MAAM,CAACI,WAAxC,MALF,CAFF;AAUE,KAXF,CADJ,CADF,eAgBE;AAAK,MAAA,KAAK,EAAE;AAACP,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,KAAK,EAAC;AAArB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAM,KAAKX,aAAL,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,MAhBF,CADF;AAuBD;;AA3CgC;;AA8CnC,eAAeF,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport AddThread from './AddThread';  \n\nclass ThreadList extends Component {\n  constructor(){\n      super();\n      this.state = { listOfThreads: [] };\n  }\n\n  getAllThreads = () =>{\n    axios.get(`/api/threads`)\n    .then(responseFromApi => {\n      this.setState({\n        listOfThreads: responseFromApi.data\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.getAllThreads();\n  }\n\n  render(){\n    return(\n      <div>\n        <div style={{width: '60%', float:\"left\"}}>\n          { this.state.listOfThreads.map( thread => {\n            return ( \n            \n              <div key={thread._id}>\n               \n                <Link to={`/threads/${thread._id}`}>\n                  < h3>{thread.title}</h3>\n                </Link>\n                <p style={{maxWidth: '400px'}} >{thread.description} </p>\n              </div>\n            \n            )})\n          }\n        </div>\n        <div style={{width: '40%', float:\"right\"}}>\n          <h2>Add New Thread</h2>\n            <AddThread getData={() => this.getAllThreads()}/> {/* <== !!! */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ThreadList;\n"]},"metadata":{},"sourceType":"module"}