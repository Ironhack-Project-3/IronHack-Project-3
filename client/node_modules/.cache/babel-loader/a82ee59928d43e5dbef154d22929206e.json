{"ast":null,"code":"var _jsxFileName = \"/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/threads/ThreadDetails.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport ThreadList from './ThreadList';\nimport { Button } from 'react-bootstrap';\nimport EditThread from './EditThread';\n\nclass ThreadDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      thread: [],\n      editForm: false,\n      error: null,\n      title: '',\n      description: ''\n    };\n\n    this.componentDidMount = () => {\n      axios.get(\"/api/threads/\" + this.props.match.params.id).then(threadObject => {\n        console.log(threadObject);\n        this.setState({\n          thread: threadObject.data\n        });\n      });\n    };\n\n    this.deleteThread = () => {\n      const id = this.props.match.params.id;\n      axios.delete(`/api/threads/${id}`).then(() => {\n        this.props.history.push(\"/threads\");\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const id = this.props.match.params.id;\n      axios.put(`/api/threads/${id}`, {\n        title: this.state.title,\n        description: this.state.description\n      }).then(response => {\n        this.setState({\n          thread: response.data,\n          title: response.data.title,\n          description: response.data.description,\n          editForm: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.toggleEditForm = () => {\n      this.setState({\n        editForm: !this.state.editForm\n      });\n    };\n\n    this.getData = () => {\n      const id = this.props.match.params.id;\n      axios.get(`/api/threads/${id}`).then(response => {\n        console.log(response.data);\n        this.setState({\n          thread: response.data,\n          title: response.data.title,\n          description: response.data.description\n        });\n      }).catch(err => {\n        console.log(err.response); // handle err.response depending on err.response.status\n\n        if (err.response.status === 404) {\n          this.setState({\n            error: \"Not found\"\n          });\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    this.props.history.push('/home'); // <--- The page you want to redirect your user to.\n  }\n\n  render() {\n    console.log(this.props);\n\n    if (this.state.thread) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thread-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thread-details-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, this.state.thread.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, this.state.thread.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thread-details-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/threads/${this.state.thread._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 60\n        }\n      }, \"Contact me\")), /*#__PURE__*/React.createElement(Link, {\n        to: `/threads/${this.state.thread._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 60\n        }\n      }, \"Add to favourites\")), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleEditForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, \"Edit Thread\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.deleteThread,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, \"Delete Thread\"), this.state.editForm && /*#__PURE__*/React.createElement(EditThread, Object.assign({}, this.state, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      })))));\n    }\n  }\n\n}\n\nexport default ThreadDetails;","map":{"version":3,"sources":["/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/threads/ThreadDetails.js"],"names":["React","Component","axios","Link","Redirect","ThreadList","Button","EditThread","ThreadDetails","state","thread","editForm","error","title","description","componentDidMount","get","props","match","params","id","then","threadObject","console","log","setState","data","deleteThread","delete","history","push","handleChange","event","name","value","target","handleSubmit","preventDefault","put","response","catch","err","toggleEditForm","getData","status","submitForm","e","render","_id"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport ThreadList from './ThreadList'\nimport { Button } from 'react-bootstrap'\nimport EditThread from './EditThread';\n\nclass ThreadDetails extends Component {\n\n  state = {\n    thread: [],\n    editForm: false,\n    error: null,\n    title: '',\n    description: ''\n  }\n\n  componentDidMount = () => {\n    axios.get(\"/api/threads/\" + this.props.match.params.id)\n      .then(threadObject => {\n        console.log(threadObject)\n        this.setState({\n          thread: threadObject.data\n        })\n      })\n  }\n\n  deleteThread = () => {\n    const id = this.props.match.params.id;\n    axios.delete(`/api/threads/${id}`).then(() => {\n      this.props.history.push(\"/threads\");\n    });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const id = this.props.match.params.id;\n    axios\n      .put(`/api/threads/${id}`, {\n        title: this.state.title,\n        description: this.state.description\n      })\n      .then(response => {\n        this.setState({\n          thread: response.data,\n          title: response.data.title,\n          description: response.data.description,\n          editForm: false\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  toggleEditForm = () => {\n    this.setState({\n      editForm: !this.state.editForm\n    })\n  }\n\n  getData = () => {\n    const id = this.props.match.params.id;\n    axios\n      .get(`/api/threads/${id}`)\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          thread: response.data, \n          title: response.data.title,\n          description: response.data.description\n        });\n      })\n      .catch(err => {\n        console.log(err.response);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  submitForm (e) {\n    e.preventDefault()\n    this.props.history.push('/home'); // <--- The page you want to redirect your user to.\n  }\n\n  render() {\n\n    console.log(this.props)\n\n    if (this.state.thread) {\n      return <div className=\"thread-details\">\n        <div className=\"thread-details-text\">\n\n          <h3>{this.state.thread.title}</h3>\n          <p>{this.state.thread.description}</p>\n          <div className=\"thread-details-buttons\">\n\n            <Link to={`/threads/${this.state.thread._id}`}><p>Contact me</p></Link>\n            <Link to={`/threads/${this.state.thread._id}`}><p>Add to favourites</p></Link>\n                <button onClick={this.toggleEditForm}>Edit Thread</button>\n                <button onClick={this.deleteThread}>Delete Thread</button>\n                {this.state.editForm && (\n                  <EditThread {...this.state}\n                  handleChange={this.handleChange}\n                  handleSubmit={this.handleSubmit} />\n                )}\n      \n\n\n          </div>\n        </div>\n      </div>\n\n    }\n  }\n}\n\nexport default ThreadDetails;\n"]},"metadata":{},"sourceType":"module"}