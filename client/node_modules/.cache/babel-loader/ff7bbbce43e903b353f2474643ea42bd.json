{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Map.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport axios from 'axios';\n\nconst Map = () => {\n  const [address, setAddress] = useState({});\n  const [viewport, setViewport] = useState({\n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"50vw\",\n    height: \"50vh\",\n    zoom: 12\n  });\n  let addressInfo = [];\n\n  const getAllAddress = () => {\n    axios.get(`/api/users`).then(responseFromApi => {\n      setAddress(responseFromApi);\n    });\n  };\n\n  useEffect(() => {\n    getAllAddress();\n  }, []);\n  useEffect(() => {\n    let info = address.data;\n\n    if (info) {\n      info.forEach(specificAddress => {\n        addressInfo.push(specificAddress.address);\n      });\n    }\n\n    function addPin(options) {\n      return new mapboxgl.Marker(options).setLngLat(options.coord).addTo(map);\n    }\n\n    function getCenter() {\n      return map.getCenter();\n    }\n\n    if (typeof addressInfo != \"undefined\") {\n      addressInfo.forEach(marker => {\n        map;\n\n        if (marker.lngLat) {\n          addPin({\n            coord: marker.coord\n          });\n        } else {\n          mapboxClient.geocoding.forwardGeocode({\n            query: `${marker.address}`,\n            autocomplete: false,\n            limit: 1\n          }).send().then(function (response) {\n            if (response && response.body && response.body.features && response.body.features.length) {\n              var feature = response.body.features[0];\n              addPin({\n                coord: feature.center\n              });\n              let marker = new mapboxgl.Marker();\n              marker.setLngLat(feature.center);\n              marker.addTo(map);\n            }\n          });\n        }\n      });\n    }\n  }, [address]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Map.js"],"names":["React","useState","useEffect","Component","ReactMapGL","Marker","Popup","axios","Map","address","setAddress","viewport","setViewport","latitude","longitude","width","height","zoom","addressInfo","getAllAddress","get","then","responseFromApi","info","data","forEach","specificAddress","push","addPin","options","mapboxgl","setLngLat","coord","addTo","map","getCenter","marker","lngLat","mapboxClient","geocoding","forwardGeocode","query","autocomplete","limit","send","response","body","features","length","feature","center"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport axios from 'axios';\n\nconst Map = () => {\n\n const [address, setAddress] = useState({})\n  const [viewport, setViewport] = useState({\n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"50vw\",\n    height: \"50vh\",\n    zoom: 12\n  });\n  \n  let addressInfo = []\n\n  const getAllAddress = () =>{\n    axios.get(`/api/users`)\n    .then(responseFromApi => {\n        setAddress(responseFromApi)\n    })\n  }\n\n  useEffect(() => { \n      getAllAddress()\n  }, [])\n\n  useEffect(() => { \n    let info = address.data\n\n    if (info) {\n        info.forEach(specificAddress => {\n        addressInfo.push(specificAddress.address)\n        })\n    }\n\n    function addPin(options) {\n        return new mapboxgl.Marker(options).setLngLat(options.coord).addTo(map);\n    }\n    \n    function getCenter() {\n        return map.getCenter();\n    }\n\n    if(typeof addressInfo != \"undefined\"){\n        addressInfo.forEach( marker => {map\n            if (marker.lngLat) {\n                addPin({\n                    coord: marker.coord\n                });\n            } else {\n                mapboxClient.geocoding\n                .forwardGeocode({\n                    query: `${marker.address}`,\n                    autocomplete: false,\n                    limit: 1\n                })\n                .send()\n                .then(function (response) {\n                    if (\n                        response &&\n                        response.body &&\n                        response.body.features &&\n                        response.body.features.length\n                    ) {\n                        var feature = response.body.features[0];\n                        addPin({\n                            coord: feature.center\n                        });\n                        let marker = new mapboxgl.Marker()\n                        marker.setLngLat(feature.center)\n                        marker.addTo(map);\n                    }\n                });\n            }\n        });\n    }\n\n  }, [address])\n\n  return (    \n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        onViewportChange={viewport => {\n          setViewport(viewport);\n        }}\n      >\n      </ReactMapGL>\n    </div>\n  );}\n\n  \nexport default Map;\n\n"]},"metadata":{},"sourceType":"module"}