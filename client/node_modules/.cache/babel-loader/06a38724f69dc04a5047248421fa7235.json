{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Signup.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { signup } from \"../services/auth\";\nconst arrayOfSkills = [{\n  label: \"I can translate in writing\",\n  name: \"write\"\n}, {\n  label: \"I can accompany to an Amt\",\n  name: \"walk\"\n}, {\n  label: \"I can translate on a phone call\",\n  name: \"call\"\n}, {\n  label: \"I can be a tandem partner\",\n  name: \"tandem\"\n}, {\n  label: \"I'd like to hang out\",\n  name: \"hang\"\n}];\nexport default class Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      name: \"\",\n      email: \"\",\n      age: null,\n      address: \"\",\n      skills: [],\n      bio: \"\",\n      write: \"\",\n      hang: \"\",\n      call: \"\",\n      walk: \"\",\n      tandem: \"\"\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeChecked = (event, label) => {\n      const {\n        name,\n        checked\n      } = event.target;\n      console.log(name, label);\n      this.setState({\n        [name]: label\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        username,\n        password,\n        name,\n        email,\n        age,\n        address,\n        bio,\n        tandem,\n        walk,\n        call,\n        write,\n        hang\n      } = this.state;\n      const skills = [tandem, walk, call, write, hang].filter(el => el); // console.log(skills);\n\n      signup(username, password, name, email, age, address, skills, bio).then(data => {\n        if (data.message) {\n          this.setState({\n            message: data.message,\n            username: \"\",\n            password: \"\",\n            age: null,\n            name: \"\",\n            email: \"\",\n            address: \"\",\n            skills: [],\n            bio: \"\"\n          });\n        } else {\n          this.props.setUser(data);\n          this.props.history.push(\"/Home\");\n        }\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"This is required to sign up\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Tell us more about yourself, including your skills and location\", \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Signup as Local\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Username: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      id: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Password: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      id: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Email: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      id: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"Name: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      id: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Address: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"address\",\n      name: \"address\",\n      value: this.state.address,\n      onChange: this.handleChange,\n      id: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \"Age: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"age\",\n      name: \"age\",\n      value: this.state.age,\n      onChange: this.handleChange,\n      id: \"age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, \" \", [\"checkbox\"].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: `inline-checkbox`,\n      className: \"skills\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"Skills:\"), arrayOfSkills.map(skill => /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: skill.label,\n      value: this.state.skills,\n      type: \"checkbox\",\n      onChange: e => this.handleChangeChecked(e, skill.label),\n      name: skill.name,\n      id: skill.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, \"Bio: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"bio\",\n      name: \"bio\",\n      value: this.state.bio,\n      onChange: this.handleChange,\n      id: \"bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    })), this.state.message && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, this.state.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(Button, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, \"Cancel\"))))));\n  }\n\n}","map":{"version":3,"sources":["/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Signup.js"],"names":["React","Component","Form","Button","Alert","signup","arrayOfSkills","label","name","Signup","state","username","password","email","age","address","skills","bio","write","hang","call","walk","tandem","handleChange","event","value","target","setState","handleChangeChecked","checked","console","log","handleSubmit","preventDefault","filter","el","then","data","message","props","setUser","history","push","render","map","type","skill","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AAAEC,EAAAA,KAAK,EAAE,4BAAT;AAAuCC,EAAAA,IAAI,EAAE;AAA7C,CADoB,EAEpB;AAAED,EAAAA,KAAK,EAAE,2BAAT;AAAsCC,EAAAA,IAAI,EAAE;AAA5C,CAFoB,EAGpB;AAAED,EAAAA,KAAK,EAAE,iCAAT;AAA4CC,EAAAA,IAAI,EAAE;AAAlD,CAHoB,EAIpB;AAAED,EAAAA,KAAK,EAAE,2BAAT;AAAsCC,EAAAA,IAAI,EAAE;AAA5C,CAJoB,EAKpB;AAAED,EAAAA,KAAK,EAAE,sBAAT;AAAiCC,EAAAA,IAAI,EAAE;AAAvC,CALoB,CAAtB;AAQA,eAAe,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC5CS,KAD4C,GACpC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNJ,MAAAA,IAAI,EAAE,EAHA;AAINK,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,GAAG,EAAE,IALC;AAMNC,MAAAA,OAAO,EAAE,EANH;AAONC,MAAAA,MAAM,EAAE,EAPF;AAQNC,MAAAA,GAAG,EAAE,EARC;AASNC,MAAAA,KAAK,EAAE,EATD;AAUNC,MAAAA,IAAI,EAAE,EAVA;AAWNC,MAAAA,IAAI,EAAE,EAXA;AAYNC,MAAAA,IAAI,EAAE,EAZA;AAaNC,MAAAA,MAAM,EAAE;AAbF,KADoC;;AAAA,SAiB5CC,YAjB4C,GAiB5BC,KAAD,IAAW;AACxB,YAAM;AAAEhB,QAAAA,IAAF;AAAQiB,QAAAA;AAAR,UAAkBD,KAAK,CAACE,MAA9B;AAEA,WAAKC,QAAL,CAAc;AACZ,SAACnB,IAAD,GAAQiB;AADI,OAAd;AAGD,KAvB2C;;AAAA,SAyB5CG,mBAzB4C,GAyBtB,CAACJ,KAAD,EAAQjB,KAAR,KAAkB;AACtC,YAAM;AAAEC,QAAAA,IAAF;AAAQqB,QAAAA;AAAR,UAAoBL,KAAK,CAACE,MAAhC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ,EAAkBD,KAAlB;AAEA,WAAKoB,QAAL,CAAc;AACZ,SAACnB,IAAD,GAAQD;AADI,OAAd;AAGD,KAhC2C;;AAAA,SAkC5CyB,YAlC4C,GAkC5BR,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACS,cAAN;AAEA,YAAM;AACJtB,QAAAA,QADI;AAEJC,QAAAA,QAFI;AAGJJ,QAAAA,IAHI;AAIJK,QAAAA,KAJI;AAKJC,QAAAA,GALI;AAMJC,QAAAA,OANI;AAOJE,QAAAA,GAPI;AAQJK,QAAAA,MARI;AASJD,QAAAA,IATI;AAUJD,QAAAA,IAVI;AAWJF,QAAAA,KAXI;AAYJC,QAAAA;AAZI,UAaF,KAAKT,KAbT;AAeA,YAAMM,MAAM,GAAG,CAACM,MAAD,EAASD,IAAT,EAAeD,IAAf,EAAqBF,KAArB,EAA4BC,IAA5B,EAAkCe,MAAlC,CAA0CC,EAAD,IAAQA,EAAjD,CAAf,CAlBwB,CAmBxB;;AAEA9B,MAAAA,MAAM,CAACM,QAAD,EAAWC,QAAX,EAAqBJ,IAArB,EAA2BK,KAA3B,EAAkCC,GAAlC,EAAuCC,OAAvC,EAAgDC,MAAhD,EAAwDC,GAAxD,CAAN,CAAmEmB,IAAnE,CACGC,IAAD,IAAU;AACR,YAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,eAAKX,QAAL,CAAc;AACZW,YAAAA,OAAO,EAAED,IAAI,CAACC,OADF;AAEZ3B,YAAAA,QAAQ,EAAE,EAFE;AAGZC,YAAAA,QAAQ,EAAE,EAHE;AAIZE,YAAAA,GAAG,EAAE,IAJO;AAKZN,YAAAA,IAAI,EAAE,EALM;AAMZK,YAAAA,KAAK,EAAE,EANK;AAOZE,YAAAA,OAAO,EAAE,EAPG;AAQZC,YAAAA,MAAM,EAAE,EARI;AASZC,YAAAA,GAAG,EAAE;AATO,WAAd;AAWD,SAZD,MAYO;AACL,eAAKsB,KAAL,CAAWC,OAAX,CAAmBH,IAAnB;AACA,eAAKE,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD;AACF,OAlBH;AAoBD,KA3E2C;AAAA;;AA6E5CC,EAAAA,MAAM,GAAG;AACPb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB;AACA,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EACkE,GADlE,CAFF,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAGE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKsB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,QAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKY,YAJjB;AAKE,MAAA,EAAE,EAAC,UALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAWE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,QAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKW,YAJjB;AAKE,MAAA,EAAE,EAAC,UALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,eAsBE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWG,KAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKU,YAJjB;AAKE,MAAA,EAAE,EAAC,OALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAtBF,eAiCE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWF,IAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKe,YAJjB;AAKE,MAAA,EAAE,EAAC,MALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAjCF,eA4CE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWK,OAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKQ,YAJjB;AAKE,MAAA,EAAE,EAAC,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA5CF,eAuDE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWI,GAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKS,YAJjB;AAKE,MAAA,EAAE,EAAC,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAvDF,eAkEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEG,CAAC,UAAD,EAAaqB,GAAb,CAAkBC,IAAD,iBAChB;AAAK,MAAA,GAAG,EAAG,iBAAX;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGvC,aAAa,CAACsC,GAAd,CAAmBE,KAAD,iBACjB,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,MAAM,MADR;AAEE,MAAA,KAAK,EAAEA,KAAK,CAACvC,KAFf;AAGE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWM,MAHpB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,QAAQ,EAAG+B,CAAD,IACR,KAAKnB,mBAAL,CAAyBmB,CAAzB,EAA4BD,KAAK,CAACvC,KAAlC,CANJ;AAQE,MAAA,IAAI,EAAEuC,KAAK,CAACtC,IARd;AASE,MAAA,EAAE,EAAEsC,KAAK,CAACtC,IATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADD,CAFH,CAlEF,eAsIE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWO,GAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKM,YAJjB;AAKE,MAAA,EAAE,EAAC,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAtIF,EAiJG,KAAKb,KAAL,CAAW4B,OAAX,iBACC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAK5B,KAAL,CAAW4B,OAApC,CAlJJ,eAqJE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CArJF,CAHF,CAPF,CADF,CADF;AA0KD;;AAzP2C","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { signup } from \"../services/auth\";\n\nconst arrayOfSkills = [\n  { label: \"I can translate in writing\", name: \"write\" },\n  { label: \"I can accompany to an Amt\", name: \"walk\" },\n  { label: \"I can translate on a phone call\", name: \"call\" },\n  { label: \"I can be a tandem partner\", name: \"tandem\" },\n  { label: \"I'd like to hang out\", name: \"hang\" },\n];\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    name: \"\",\n    email: \"\",\n    age: null,\n    address: \"\",\n    skills: [],\n    bio: \"\",\n    write: \"\",\n    hang: \"\",\n    call: \"\",\n    walk: \"\",\n    tandem: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleChangeChecked = (event, label) => {\n    const { name, checked } = event.target;\n    console.log(name, label);\n\n    this.setState({\n      [name]: label,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      username,\n      password,\n      name,\n      email,\n      age,\n      address,\n      bio,\n      tandem,\n      walk,\n      call,\n      write,\n      hang,\n    } = this.state;\n\n    const skills = [tandem, walk, call, write, hang].filter((el) => el);\n    // console.log(skills);\n\n    signup(username, password, name, email, age, address, skills, bio).then(\n      (data) => {\n        if (data.message) {\n          this.setState({\n            message: data.message,\n            username: \"\",\n            password: \"\",\n            age: null,\n            name: \"\",\n            email: \"\",\n            address: \"\",\n            skills: [],\n            bio: \"\",\n          });\n        } else {\n          this.props.setUser(data);\n          this.props.history.push(\"/Home\");\n        }\n      }\n    );\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <>\n        <div className=\"signup-page\">\n          <div className=\"signup-text\">\n            <p>This is required to sign up</p>\n            <p>\n              Tell us more about yourself, including your skills and location{\" \"}\n            </p>\n          </div>\n          <div className=\"signup-form\">\n            <h2>Signup as Local</h2>\n\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Label htmlFor=\"username\">Username: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                  id=\"username\"\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label htmlFor=\"password\">Password: </Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  id=\"password\"\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"email\">Email: </Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                  id=\"email\"\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"name\">Name: </Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                  id=\"name\"\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"address\">Address: </Form.Label>\n                <Form.Control\n                  type=\"address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.handleChange}\n                  id=\"address\"\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"age\">Age: </Form.Label>\n                <Form.Control\n                  type=\"age\"\n                  name=\"age\"\n                  value={this.state.age}\n                  onChange={this.handleChange}\n                  id=\"age\"\n                />\n              </Form.Group>\n\n              <Form>\n                {\" \"}\n                {[\"checkbox\"].map((type) => (\n                  <div key={`inline-checkbox`} className=\"skills\">\n                    <p>Skills:</p>\n                    {arrayOfSkills.map((skill) => (\n                      <Form.Check\n                        inline\n                        label={skill.label}\n                        value={this.state.skills}\n                        type=\"checkbox\"\n                        onChange={(e) =>\n                          this.handleChangeChecked(e, skill.label)\n                        }\n                        name={skill.name}\n                        id={skill.name}\n                      />\n                    ))}\n                    {/* <Form.Check\n                      inline\n                      label=\"I can translate in writing\"\n                      type=\"checkbox\"\n                      value={this.state.skills}\n                      onChange={this.handleChangeChecked}\n                      id=\"write\"\n                      name=\"write\"\n                    />\n                    <Form.Check\n                      inline\n                      label=\"I can accompany to an Amt\"\n                      type=\"checkbox\"\n                      value={this.state.skills}\n                      onChange={this.handleChangeChecked}\n                      id=\"walk\"\n                      name=\"walk\"\n                      banana=\"Does this work?\"\n                    />\n                    <Form.Check\n                      inline\n                      label=\"I can translate on a phone call\"\n                      type=\"checkbox\"\n                      value={this.state.skills}\n                      onChange={this.handleChangeChecked}\n                      id=\"call\"\n                      name=\"call\"\n                    />\n                    <Form.Check\n                      inline\n                      label=\"I can be a tandem partner\"\n                      type=\"checkbox\"\n                      value={this.state.skills}\n                      onChange={this.handleChangeChecked}\n                      id=\"tandem\"\n                      name=\"tandem\"\n                    />\n                    <Form.Check\n                      inline\n                      label=\"I'd like to hang out\"\n                      type=\"checkbox\"\n                      value={this.state.skills}\n                      onChange={this.handleChangeChecked}\n                      id=\"hang\"\n                      name=\"hang\"\n                    /> */}\n                  </div>\n                ))}\n              </Form>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"bio\">Bio: </Form.Label>\n                <Form.Control\n                  type=\"bio\"\n                  name=\"bio\"\n                  value={this.state.bio}\n                  onChange={this.handleChange}\n                  id=\"bio\"\n                />\n              </Form.Group>\n\n              {this.state.message && (\n                <Alert variant=\"danger\">{this.state.message}</Alert>\n              )}\n\n              <div className=\"signup-buttons\">\n                <Button type=\"submit\">Sign Up</Button>\n                <Button href=\"/\">Cancel</Button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}