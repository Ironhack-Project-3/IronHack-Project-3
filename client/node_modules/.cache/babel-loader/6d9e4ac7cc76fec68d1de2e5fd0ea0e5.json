{"ast":null,"code":"var _jsxFileName = \"/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/threads/ThreadDetails.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport ThreadList from './ThreadList';\nimport { Button } from 'react-bootstrap';\nimport EditThread from './EditThread';\nimport Navbar from '../Navbar';\n\nclass ThreadDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      thread: [],\n      editForm: false,\n      error: null,\n      title: '',\n      description: ''\n    };\n\n    this.componentDidMount = () => {\n      axios.get(\"/api/threads/\" + this.props.match.params.id).then(threadObject => {\n        // console.log(threadObject)\n        this.setState({\n          thread: threadObject.data\n        });\n      });\n    };\n\n    this.deleteThread = () => {\n      const id = this.props.match.params.id;\n      axios.delete(`/api/threads/${id}`).then(() => {\n        this.props.history.push(\"/threads\");\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const id = this.props.match.params.id;\n      axios.put(`/api/threads/${id}`, {\n        title: this.state.title,\n        description: this.state.description\n      }).then(response => {\n        this.setState({\n          thread: response.data,\n          title: response.data.title,\n          description: response.data.description,\n          editForm: false\n        });\n        this.props.history.push(`/threads/`);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.toggleEditForm = () => {\n      this.setState({\n        editForm: !this.state.editForm\n      });\n    };\n\n    this.getData = () => {\n      const id = this.props.match.params.id;\n      axios.get(`/api/threads/${id}`).then(response => {\n        console.log(response.data);\n        this.setState({\n          thread: response.data,\n          title: response.data.title,\n          description: response.data.description\n        });\n      }).catch(err => {\n        console.log(err.response); // handle err.response depending on err.response.status\n\n        if (err.response.status === 404) {\n          this.setState({\n            error: \"Not found\"\n          });\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.getAllUsers = () => {\n      axios.get(\"/api/users\").then(response => {\n        this.setState({\n          listOfUsers: response.data\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getAllThreads();\n    this.getAllUsers();\n  }\n\n  render() {\n    if (this.state.thread) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thread-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thread-details-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, this.state.thread.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, this.state.thread.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thread-details-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/threads/${this.state.thread._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 60\n        }\n      }, \"Contact me\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thread-details-edit-delete-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleEditForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, \"Edit Thread\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.deleteThread,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, \"Delete Thread\")), this.state.editForm && /*#__PURE__*/React.createElement(EditThread, Object.assign({}, this.state, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      })))));\n    }\n  }\n\n}\n\nexport default ThreadDetails;","map":{"version":3,"sources":["/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/threads/ThreadDetails.js"],"names":["React","Component","axios","Link","Redirect","ThreadList","Button","EditThread","Navbar","ThreadDetails","state","thread","editForm","error","title","description","componentDidMount","get","props","match","params","id","then","threadObject","setState","data","deleteThread","delete","history","push","handleChange","event","name","value","target","handleSubmit","preventDefault","put","response","catch","err","console","log","toggleEditForm","getData","status","getAllUsers","listOfUsers","getAllThreads","render","_id"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport ThreadList from './ThreadList'\nimport { Button } from 'react-bootstrap'\nimport EditThread from './EditThread'\nimport Navbar from '../Navbar'\n\nclass ThreadDetails extends Component {\n\n  state = {\n    thread: [],\n    editForm: false,\n    error: null,\n    title: '',\n    description: ''\n  }\n\n  componentDidMount = () => {\n    axios.get(\"/api/threads/\" + this.props.match.params.id)\n      .then(threadObject => {\n        // console.log(threadObject)\n        this.setState({\n          thread: threadObject.data\n        })\n      })\n  }\n\n  deleteThread = () => {\n    const id = this.props.match.params.id;\n    axios.delete(`/api/threads/${id}`).then(() => {\n      this.props.history.push(\"/threads\");\n    });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const id = this.props.match.params.id;\n    axios\n      .put(`/api/threads/${id}`, {\n        title: this.state.title,\n        description: this.state.description\n      })\n      .then(response => {\n        this.setState({\n          thread: response.data,\n          title: response.data.title,\n          description: response.data.description,\n          editForm: false\n        });\n        this.props.history.push(`/threads/`);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  toggleEditForm = () => {\n    this.setState({\n      editForm: !this.state.editForm\n    })\n  }\n\n  getData = () => {\n    const id = this.props.match.params.id;\n    axios\n      .get(`/api/threads/${id}`)\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          thread: response.data, \n          title: response.data.title,\n          description: response.data.description\n          \n        });\n      })\n      .catch(err => {\n        console.log(err.response);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  getAllUsers = () => {\n    axios.get(\"/api/users\").then((response) => {\n      this.setState({\n        listOfUsers: response.data,\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.getAllThreads();\n    this.getAllUsers();\n  }\n  \n  render() {\n \n\n    if (this.state.thread) {\n      return   (\n      <>\n      <Navbar/> \n       <div className=\"thread-details\">\n\n        <div className=\"thread-details-text\">\n\n          <h3>{this.state.thread.title}</h3>\n          <p>{this.state.thread.description}</p>\n          \n          <div className=\"thread-details-buttons\">\n            \n            <Link to={`/threads/${this.state.thread._id}`}><p>Contact me</p></Link>\n\n            </div>\n\n            <div className=\"thread-details-edit-delete-buttons\">\n                <button onClick={this.toggleEditForm}>Edit Thread</button>\n                <button onClick={this.deleteThread}>Delete Thread</button>\n                </div>\n                {this.state.editForm && (\n                  <EditThread {...this.state}\n                  handleChange={this.handleChange}\n                  handleSubmit={this.handleSubmit} />\n                )}\n        </div>\n      </div>\n      </>\n      )\n    }\n  }\n}\n\nexport default ThreadDetails;"]},"metadata":{},"sourceType":"module"}