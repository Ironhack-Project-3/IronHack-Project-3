{"ast":null,"code":"var _jsxFileName = \"/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/threads/ThreadList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport AddThread from './AddThread';\nimport Profile from '../Profile';\n\nclass ThreadList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllThreads = () => {\n      axios.get(`/api/threads`).then(responseFromApi => {\n        this.setState({\n          listOfThreads: responseFromApi.data\n        });\n      });\n    };\n\n    this.getAllUsers = () => {\n      axios.get(\"/api/users\").then(response => {\n        this.setState({\n          listOfUsers: response.data\n        });\n      });\n    };\n\n    this.state = {\n      listOfThreads: [],\n      listOfUsers: []\n    };\n  }\n\n  componentDidMount() {\n    this.getAllThreads();\n    this.getAllUsers();\n  }\n\n  render() {\n    console.log(this.state.listOfThreads);\n    console.log(\"these are the users\", this.state.listOfUsers); // console.log(\"threadList props\", this.props)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"threads\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"threadlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-thread\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Add a New Thread\"), /*#__PURE__*/React.createElement(AddThread, {\n      getData: () => this.getAllThreads(),\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"threadlist-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, this.state.listOfThreads.map(thread => {\n      console.log(\"thread map:\", thread);\n      {\n        let userName = this.state.listOfUsers.filter(name => thread.user === name._id);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"threadlist-individual-result\",\n          key: thread._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/threads/${thread._id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }\n        }, thread.title)), /*#__PURE__*/React.createElement(Link, {\n          to: `/profile/${thread.user}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }\n        }, \"userName\"), /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }\n        }, this.props.user.username ? this.props.user.username : null)), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 23\n          }\n        }, thread.description, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"threadlist-buttons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/threads/${thread._id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 27\n          }\n        }, \"Go to Post\")), /*#__PURE__*/React.createElement(Link, {\n          to: `/threads/${thread._id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 27\n          }\n        }, \"Add to favourites\"))));\n      }\n    })))));\n  }\n\n}\n\nexport default ThreadList;","map":{"version":3,"sources":["/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/threads/ThreadList.js"],"names":["React","Component","axios","Link","AddThread","Profile","ThreadList","constructor","props","getAllThreads","get","then","responseFromApi","setState","listOfThreads","data","getAllUsers","response","listOfUsers","state","componentDidMount","render","console","log","user","map","thread","userName","filter","name","_id","title","username","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport AddThread from './AddThread';\nimport Profile from '../Profile'\n\nclass ThreadList extends Component {\n  constructor(props){\n      super(props);\n      this.state = { \n        listOfThreads: [], \n        listOfUsers: []\n      };\n  }\n\n  getAllThreads = () =>{\n    axios.get(`/api/threads`)\n    .then(responseFromApi => {\n      this.setState({\n        listOfThreads: responseFromApi.data\n        \n      })\n    })\n  }\n\n  getAllUsers = () => {\n    axios.get(\"/api/users\").then(response => {\n\n      this.setState({\n        listOfUsers: response.data\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.getAllThreads();\n    this.getAllUsers()\n  }\n\n  render(){\n    console.log(this.state.listOfThreads)\n    console.log(\"these are the users\", this.state.listOfUsers)\n    // console.log(\"threadList props\", this.props)\n    return(\n      <>\n        {/* <Navbar /> */}\n          <div className=\"threads\">\n            <div className=\"threadlist\">\n              <div className=\"add-thread\">\n                <h2>Add a New Thread</h2>\n                  <AddThread getData={() => this.getAllThreads()} user={this.props.user}/> {/* <== !!! */}\n              </div>\n              <div className=\"threadlist-results\">\n                { this.state.listOfThreads.map( thread => {\n                  console.log(\"thread map:\", thread)\n\n                  {let userName = this.state.listOfUsers.filter(name => thread.user === name._id)\n                  \n                    return ( \n                    <div className=\"threadlist-individual-result\" key={thread._id}>\n                      \n                      <Link to={`/threads/${thread._id}`}>\n                        <h3>{thread.title}</h3>\n                      </Link>\n                      \n                      <Link to={`/profile/${thread.user}`}>\n                      <h5>userName</h5>\n                        <h5>{this.props.user.username?this.props.user.username:null}</h5>\n                      </Link>\n                      \n                      <p>{thread.description} </p>\n                      \n                      <div className=\"threadlist-buttons\">\n                        <Link to={`/threads/${thread._id}`}>\n                          <p>Go to Post</p>\n                        </Link>\n                        <Link to={`/threads/${thread._id}`}>\n                          <p>Add to favourites</p>\n                        </Link>\n\n                      </div>\n                    </div>\n                  )\n                  }\n                  })\n                }\n              </div>\n            </div>\n          </div>\n      </>\n    )\n  }\n}\n\nexport default ThreadList;\n"]},"metadata":{},"sourceType":"module"}