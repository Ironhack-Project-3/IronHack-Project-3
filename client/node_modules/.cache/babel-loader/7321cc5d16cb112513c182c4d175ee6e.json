{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Map.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport axios from 'axios';\n\nconst convertAddress = address => {\n  let token = \"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\";\n  let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=address&access_token=${token}`;\n  return axios.get(url).then(response => {\n    return response.data.features[0].center;\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst Map = () => {\n  const [address, setAddress] = useState([]);\n  const [viewport, setViewport] = useState({\n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"50vw\",\n    height: \"50vh\",\n    zoom: 12\n  });\n  let addressInfo = [];\n  let coordinates = addressInfo.map(elem => {\n    return convertAddress(elem);\n  });\n\n  const getAllAddress = () => {\n    axios.get(`/api/users`).then(responseFromApi => {\n      let coordinates = responseFromApi.data.map(user => {\n        console.log(user);\n        return convertAddress(user.address);\n      });\n      Promise.all(coordinates).then(cords => {\n        console.log(cords);\n        setAddress(cords);\n      });\n    });\n  };\n\n  useEffect(() => {\n    getAllAddress();\n  }, []);\n  useEffect(() => {\n    console.log(address, \"recognize me\");\n  }, [address]);\n  useEffect(() => {\n    let info = address.data;\n\n    if (info) {\n      info.forEach(specificAddress => {\n        addressInfo.push(specificAddress.address);\n      });\n    }\n  }, [address]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), this.state.sunsets.map(sunset => /*#__PURE__*/React.createElement(Marker, {\n    key: sunset._id,\n    longitude: sunset.longitude,\n    latitude: sunset.latitude,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/spotdetails/${sunset._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"marker-btn-img\",\n    src: sunset.img,\n    alt: \"sunset icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }\n  }))))));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Map.js"],"names":["React","useState","useEffect","Component","ReactMapGL","Marker","Popup","axios","convertAddress","address","token","url","get","then","response","data","features","center","catch","err","console","log","Map","setAddress","viewport","setViewport","latitude","longitude","width","height","zoom","addressInfo","coordinates","map","elem","getAllAddress","responseFromApi","user","Promise","all","cords","info","forEach","specificAddress","push","state","sunsets","sunset","_id","img"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport axios from 'axios';\n\nconst convertAddress=(address)=>{\n  let token=\"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\"\n let url=`https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=address&access_token=${token}`\n    return axios.get(url).then(response => {\n      return response.data.features[0].center\n }).catch(err=>{console.log(err)})\n\n}\nconst Map = () => {\n\n const [address, setAddress] = useState([])\n  const [viewport, setViewport] = useState({\n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"50vw\",\n    height: \"50vh\",\n    zoom: 12\n  });\n  \n  let addressInfo = []\n\n  let coordinates = addressInfo.map(elem => {\n    return convertAddress(elem)\n  })\n\n\n  const getAllAddress = () =>{\n    axios.get(`/api/users`)\n    .then(responseFromApi => {\n        let coordinates = responseFromApi.data.map(user=>{\n          console.log(user)\n          return convertAddress(user.address)\n        })\n        Promise.all(coordinates).then(cords=>{\n          console.log(cords)\n          setAddress(cords)\n        })\n    })\n  }\n\n  useEffect(() => { \n      getAllAddress()\n  }, [])\n\n\n  useEffect(()=>{\nconsole.log(address,\"recognize me\")\n  },[address])\n\n  useEffect(() => { \n    let info = address.data\n\n    if (info) {\n        info.forEach(specificAddress => {\n        addressInfo.push(specificAddress.address)\n        })\n    }\n\n  }, [address])\n\n\n\n  return (    \n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        onViewportChange={viewport => {\n          setViewport(viewport);\n        }}\n      >\n      \n{this.state.sunsets.map(sunset => \n                <Marker \n                  key={sunset._id}\n                  longitude={ sunset.longitude }\n                  latitude={ sunset.latitude }\n                  >\n                   {/* <Pin size={5} /> */}\n\n                   {/* <button class=\"marker-btn\">\n                    <img src = { sunset.img } alt=\"sunset icon\" />\n                   </button> */}\n                   \n                   <Link to={`/spotdetails/${sunset._id}`}>\n                   <img className=\"marker-btn-img\" src = { sunset.img } alt=\"sunset icon\" />\n                  </Link>\n                </Marker>\n            )}\n\n\n      </ReactMapGL>\n\n    </div>\n  );}\n\n  \nexport default Map;\n\n"]},"metadata":{},"sourceType":"module"}