{"ast":null,"code":"var _jsxFileName = \"/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/Map.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport Pin from \"./Pin\";\nimport axios from \"axios\";\nimport mapboxgl from \"mapbox-gl\";\nimport tower from \"../images/tower.png\";\n\nconst convertAddress = address => {\n  let token = \"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\";\n  let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=address&access_token=${token}`;\n  return axios.get(url).then(response => {\n    return response.data.features[0].center;\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst Map = () => {\n  const [address, setAddress] = useState([]);\n  const [viewport, setViewport] = useState({\n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"200vh\",\n    height: \"30vh\",\n    zoom: 10\n  });\n  let addressInfo = [];\n  let coordinates = addressInfo.map(elem => {\n    return convertAddress(elem);\n  });\n\n  const getAllAddress = () => {\n    axios.get(`/api/users`).then(responseFromApi => {\n      let coordinates = responseFromApi.data.map(user => {\n        return convertAddress(user.address);\n      });\n      Promise.all(coordinates).then(cords => {\n        setAddress(cords);\n      });\n    });\n  };\n\n  useEffect(() => {\n    getAllAddress();\n  }, []);\n  useEffect(() => {}, [address]);\n  useEffect(() => {\n    let info = address.data;\n\n    if (info) {\n      info.forEach(specificAddress => {\n        addressInfo.push(specificAddress.address);\n      });\n    }\n  }, [address]); // var map = new mapboxgl.Map({\n  //   container: 'map', // container id\n  //   style: 'mapbox://styles/mapbox/streets-v11', //stylesheet location\n  //   center: [-122.65, 45.52], // starting position\n  //   zoom: 9 // starting zoom\n  //   });\n  //   // disable map zoom when using scroll\n  //   Map.scrollZoom.disable();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\",\n    mapStyle: \"mapbox://styles/racheldlt/ckd8ugjbx131v1imp0vnj1vvz\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), address.map(location => {\n    console.log(location);\n    if (location) return /*#__PURE__*/React.createElement(Marker, {\n      key: location._id,\n      longitude: location[0],\n      latitude: location[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pin, {\n      size: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: t,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/racheldelatorre/Documents/ironhack/web/projects/app-react/IronHack-Project-3/client/src/components/Map.js"],"names":["React","useState","useEffect","Component","ReactMapGL","Marker","Popup","Pin","axios","mapboxgl","tower","convertAddress","address","token","url","get","then","response","data","features","center","catch","err","console","log","Map","setAddress","viewport","setViewport","latitude","longitude","width","height","zoom","addressInfo","coordinates","map","elem","getAllAddress","responseFromApi","user","Promise","all","cords","info","forEach","specificAddress","push","location","_id","t"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport Pin from \"./Pin\";\nimport axios from \"axios\";\nimport mapboxgl from \"mapbox-gl\"\nimport tower from \"../images/tower.png\"\n\nconst convertAddress = (address) => {\n  let token =\n    \"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\";\n  let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=address&access_token=${token}`;\n  return axios\n    .get(url)\n    .then((response) => {\n      return response.data.features[0].center;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\nconst Map = () => {\n  const [address, setAddress] = useState([]);\n  const [viewport, setViewport] = useState({\n \n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"200vh\",\n    height: \"30vh\",\n    zoom: 10 \n  });\n\n  let addressInfo = [];\n\n  let coordinates = addressInfo.map((elem) => {\n    return convertAddress(elem);\n  });\n\n\n  const getAllAddress = () => {\n    axios.get(`/api/users`).then((responseFromApi) => {\n      let coordinates = responseFromApi.data.map((user) => {\n        return convertAddress(user.address);\n      });\n      Promise.all(coordinates).then((cords) => {\n        setAddress(cords);\n      });\n    });\n  };\n\n  useEffect(() => {\n    getAllAddress();\n  }, []);\n\n  useEffect(() => {\n  }, [address]);\n\n  useEffect(() => {\n    let info = address.data;\n\n    if (info) {\n      info.forEach((specificAddress) => {\n        addressInfo.push(specificAddress.address);\n      });\n    }\n  }, [address]);\n   \n\n  // var map = new mapboxgl.Map({\n  //   container: 'map', // container id\n  //   style: 'mapbox://styles/mapbox/streets-v11', //stylesheet location\n  //   center: [-122.65, 45.52], // starting position\n  //   zoom: 9 // starting zoom\n  //   });\n     \n  //   // disable map zoom when using scroll\n  //   Map.scrollZoom.disable();\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\"\n        mapStyle=\"mapbox://styles/racheldlt/ckd8ugjbx131v1imp0vnj1vvz\"\n        onViewportChange={(viewport) => {\n          setViewport(viewport);\n        }}\n      >\n        {address.map((location) => {\n          console.log(location);\n          if(location)\n          return (\n            <Marker\n              key={location._id}\n              longitude={location[0]}\n              latitude={location[1]}\n            >\n              <Pin size={5} />\n              <img src= {t} />\n            </Marker>\n          );\n        })}\n\n      </ReactMapGL>\n\n    </div>\n    \n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}