{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Map.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport axios from 'axios';\n\nconst convertAddress = address => {\n  let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=address&access_token=pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ`;\n  return axios.get(url).then(response => {\n    return response.data.features[0];\n  });\n};\n\nconst Map = () => {\n  const [address, setAddress] = useState({});\n  const [viewport, setViewport] = useState({\n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"50vw\",\n    height: \"50vh\",\n    zoom: 12\n  });\n  let addressInfo = [];\n  let coordinates = addressInfo.map(elem => {\n    return conver;\n  });\n\n  const getAllAddress = () => {\n    axios.get(`/api/users`).then(responseFromApi => {\n      setAddress(responseFromApi);\n    });\n  };\n\n  useEffect(() => {\n    getAllAddress();\n  }, []);\n  useEffect(() => {\n    let info = address.data;\n\n    if (info) {\n      info.forEach(specificAddress => {\n        addressInfo.push(specificAddress.address);\n      });\n    }\n  }, [address]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Map.js"],"names":["React","useState","useEffect","Component","ReactMapGL","Marker","Popup","axios","convertAddress","address","url","get","then","response","data","features","Map","setAddress","viewport","setViewport","latitude","longitude","width","height","zoom","addressInfo","coordinates","map","elem","conver","getAllAddress","responseFromApi","info","forEach","specificAddress","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,cAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAEC,OAAD,IAAW;AAC/B,MAAIC,GAAG,GAAE,qDAAoDD,OAAQ,+HAArE;AACA,SAAOF,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,QAAQ,IAAE;AACnC,WAAOA,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuB,CAAvB,CAAP;AACD,GAFM,CAAP;AAIA,CAND;;AAOA,MAAMC,GAAG,GAAG,MAAM;AAEjB,QAAM,CAACP,OAAD,EAAUQ,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACC,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AACvCmB,IAAAA,QAAQ,EAAE,OAD6B;AAEvCC,IAAAA,SAAS,EAAE,OAF4B;AAGvCC,IAAAA,KAAK,EAAE,MAHgC;AAIvCC,IAAAA,MAAM,EAAE,MAJ+B;AAKvCC,IAAAA,IAAI,EAAE;AALiC,GAAD,CAAxC;AAQA,MAAIC,WAAW,GAAG,EAAlB;AACF,MAAIC,WAAW,GAACD,WAAW,CAACE,GAAZ,CAAgBC,IAAI,IAAE;AAEpC,WAAOC,MAAP;AACD,GAHe,CAAhB;;AAIE,QAAMC,aAAa,GAAG,MAAK;AACzBvB,IAAAA,KAAK,CAACI,GAAN,CAAW,YAAX,EACCC,IADD,CACMmB,eAAe,IAAI;AACrBd,MAAAA,UAAU,CAACc,eAAD,CAAV;AACH,KAHD;AAID,GALD;;AAOA7B,EAAAA,SAAS,CAAC,MAAM;AACZ4B,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI8B,IAAI,GAAGvB,OAAO,CAACK,IAAnB;;AAEA,QAAIkB,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAACC,OAAL,CAAaC,eAAe,IAAI;AAChCT,QAAAA,WAAW,CAACU,IAAZ,CAAiBD,eAAe,CAACzB,OAAjC;AACC,OAFD;AAGH;AAEF,GATQ,EASN,CAACA,OAAD,CATM,CAAT;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,oBACMS,QADN;AAEE,IAAA,oBAAoB,EAAC,8FAFvB;AAGE,IAAA,QAAQ,EAAC,oCAHX;AAIE,IAAA,gBAAgB,EAAEA,QAAQ,IAAI;AAC5BC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAYG,CAlDL;;AAqDA,eAAeF,GAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport axios from 'axios';\n\nconst convertAddress=(address)=>{\n let url=`https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=address&access_token=pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ`\n return axios.get(url).then(response=>{\n   return response.data.features[0]\n })\n\n}\nconst Map = () => {\n\n const [address, setAddress] = useState({})\n  const [viewport, setViewport] = useState({\n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"50vw\",\n    height: \"50vh\",\n    zoom: 12\n  });\n  \n  let addressInfo = []\nlet coordinates=addressInfo.map(elem=>{\n\n  return conver\n})\n  const getAllAddress = () =>{\n    axios.get(`/api/users`)\n    .then(responseFromApi => {\n        setAddress(responseFromApi)\n    })\n  }\n\n  useEffect(() => { \n      getAllAddress()\n  }, [])\n\n  useEffect(() => { \n    let info = address.data\n\n    if (info) {\n        info.forEach(specificAddress => {\n        addressInfo.push(specificAddress.address)\n        })\n    }\n\n  }, [address])\n\n  return (    \n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        onViewportChange={viewport => {\n          setViewport(viewport);\n        }}\n      >\n      </ReactMapGL>\n    </div>\n  );}\n\n  \nexport default Map;\n\n"]},"metadata":{},"sourceType":"module"}