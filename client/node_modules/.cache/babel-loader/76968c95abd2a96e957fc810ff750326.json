{"ast":null,"code":"import _slicedToArray from\"/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,Component}from\"react\";import ReactMapGL,{Marker,Popup}from\"react-map-gl\";import Pin from\"./Pin\";import axios from\"axios\";var convertAddress=function convertAddress(address){var token=\"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\";var url=\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(address,\".json?types=address&access_token=\").concat(token);return axios.get(url).then(function(response){return response.data.features[0].center;}).catch(function(err){console.log(err);});};var Map=function Map(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState({latitude:52.5200,longitude:13.4050,width:\"180vh\",height:\"100vh\",zoom:10}),_useState4=_slicedToArray(_useState3,2),viewport=_useState4[0],setViewport=_useState4[1];var addressInfo=[];var coordinates=addressInfo.map(function(elem){return convertAddress(elem);});var getAllAddress=function getAllAddress(){axios.get(\"/api/users\").then(function(responseFromApi){var coordinates=responseFromApi.data.map(function(user){return convertAddress(user.address);});Promise.all(coordinates).then(function(cords){setAddress(cords);});});};useEffect(function(){getAllAddress();},[]);useEffect(function(){},[address]);useEffect(function(){var info=address.data;if(info){info.forEach(function(specificAddress){addressInfo.push(specificAddress.address);});}},[address]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ReactMapGL,Object.assign({},viewport,{mapboxApiAccessToken:\"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\",mapStyle:\"mapbox://styles/mapbox/streets-v11\",onViewportChange:function onViewportChange(viewport){setViewport(viewport);}}),address.map(function(location){console.log(location);if(location)return/*#__PURE__*/React.createElement(Marker,{key:location._id,longitude:location[0],latitude:location[1]},/*#__PURE__*/React.createElement(Pin,{size:5}));})));};export default Map;","map":{"version":3,"sources":["/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/Map.js"],"names":["React","useState","useEffect","Component","ReactMapGL","Marker","Popup","Pin","axios","convertAddress","address","token","url","get","then","response","data","features","center","catch","err","console","log","Map","setAddress","latitude","longitude","width","height","zoom","viewport","setViewport","addressInfo","coordinates","map","elem","getAllAddress","responseFromApi","user","Promise","all","cords","info","forEach","specificAddress","push","location","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport Pin from \"./Pin\";\nimport axios from \"axios\";\n\nconst convertAddress = (address) => {\n  let token =\n    \"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\";\n  let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=address&access_token=${token}`;\n  return axios\n    .get(url)\n    .then((response) => {\n      return response.data.features[0].center;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\nconst Map = () => {\n  const [address, setAddress] = useState([]);\n  const [viewport, setViewport] = useState({\n \n    latitude: 52.5200,\n    longitude: 13.4050,\n    width: \"180vh\",\n    height: \"100vh\",\n    zoom: 10 \n  });\n\n  let addressInfo = [];\n\n  let coordinates = addressInfo.map((elem) => {\n    return convertAddress(elem);\n  });\n\n\n  const getAllAddress = () => {\n    axios.get(`/api/users`).then((responseFromApi) => {\n      let coordinates = responseFromApi.data.map((user) => {\n        return convertAddress(user.address);\n      });\n      Promise.all(coordinates).then((cords) => {\n        setAddress(cords);\n      });\n    });\n  };\n\n  useEffect(() => {\n    getAllAddress();\n  }, []);\n\n  useEffect(() => {\n  }, [address]);\n\n  useEffect(() => {\n    let info = address.data;\n\n    if (info) {\n      info.forEach((specificAddress) => {\n        addressInfo.push(specificAddress.address);\n      });\n    }\n  }, [address]);\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoicmFjaGVsZGx0IiwiYSI6ImNrYzdsMG9qZTBxOGMyc2xqMzV2ejd1czEifQ.4f9dZK4w0vGTCrStvdKzlQ\"\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        onViewportChange={(viewport) => {\n          setViewport(viewport);\n        }}\n      >\n        {address.map((location) => {\n          console.log(location);\n          if(location)\n          return (\n            <Marker\n              key={location._id}\n              longitude={location[0]}\n              latitude={location[1]}\n            >\n              <Pin size={5} />\n            </Marker>\n          );\n        })}\n\n      </ReactMapGL>\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}