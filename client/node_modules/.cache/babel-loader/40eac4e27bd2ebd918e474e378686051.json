{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/threads/ThreadList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport AddThread from \"./AddThread\";\nimport Profile from \"../Profile\";\n\nclass ThreadList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllThreads = () => {\n      axios.get(`/api/threads`).then(responseFromApi => {\n        this.setState({\n          listOfThreads: responseFromApi.data\n        });\n      });\n    };\n\n    this.getAllUsers = () => {\n      axios.get(\"/api/users\").then(response => {\n        this.setState({\n          listOfUsers: response.data\n        });\n      });\n    };\n\n    this.state = {\n      listOfThreads: [],\n      listOfUsers: []\n    };\n  }\n\n  componentDidMount() {\n    this.getAllThreads();\n    this.getAllUsers();\n  }\n\n  render() {\n    console.log(\"this is the list of threads\", this.state.listOfThreads);\n    console.log(\"these are the users\", this.state.listOfUsers); // console.log(\"threadList props\", this.props)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"threads\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"threadlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-thread\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Add a New Thread\"), /*#__PURE__*/React.createElement(AddThread, {\n      getData: () => this.getAllThreads(),\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"threadlist-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, this.state.listOfThreads.map(thread => {\n      let name = \"\";\n      let id = \"\";\n      thread.user ? name = thread.user.username : name = \"\";\n      thread.user ? id = thread.user._id : id = \"\";\n      {\n        /* let tests = this.state.listOfUsers.find(\n        (el) => el._id === thread.user\n        ); */\n      }\n      {\n        /* let usernameTest = this.state.listOfUsers.find(\n        (user) => console.log(user) || user._id === thread.user\n        ); */\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"threadlist-individual-result\",\n        key: thread._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/threads/${thread._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }\n      }, thread.title)), /*#__PURE__*/React.createElement(Link, {\n        to: `/profile/${th._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }\n      }, name)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, thread.description, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"threadlist-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/threads/${thread._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, \"Go to Post\"))));\n    })))));\n  }\n\n}\n\nexport default ThreadList;","map":{"version":3,"sources":["/home/administrator/Documents/Ironhack/Project3/IronHack-Project-3/client/src/components/threads/ThreadList.js"],"names":["React","Component","axios","Link","AddThread","Profile","ThreadList","constructor","props","getAllThreads","get","then","responseFromApi","setState","listOfThreads","data","getAllUsers","response","listOfUsers","state","componentDidMount","render","console","log","user","map","thread","name","id","username","_id","title","th","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport AddThread from \"./AddThread\";\nimport Profile from \"../Profile\";\n\nclass ThreadList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfThreads: [],\n      listOfUsers: [],\n    };\n  }\n\n  getAllThreads = () => {\n    axios.get(`/api/threads`).then((responseFromApi) => {\n      this.setState({\n        listOfThreads: responseFromApi.data,\n      });\n    });\n  };\n\n  getAllUsers = () => {\n    axios.get(\"/api/users\").then((response) => {\n      this.setState({\n        listOfUsers: response.data,\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.getAllThreads();\n    this.getAllUsers();\n  }\n\n  render() {\n    console.log(\"this is the list of threads\", this.state.listOfThreads);\n    console.log(\"these are the users\", this.state.listOfUsers);\n    // console.log(\"threadList props\", this.props)\n    return (\n      <>\n        {/* <Navbar /> */}\n        <div className=\"threads\">\n          <div className=\"threadlist\">\n            <div className=\"add-thread\">\n              <h2>Add a New Thread</h2>\n              <AddThread\n                getData={() => this.getAllThreads()}\n                user={this.props.user}\n              />{\" \"}\n              {/* <== !!! */}\n            </div>\n            <div className=\"threadlist-results\">\n              {this.state.listOfThreads.map((thread) => {\n                let name = \"\";\n                let id = \"\";\n\n                thread.user ? (name = thread.user.username) : (name = \"\");\n                thread.user ? (id = thread.user._id) : (id = \"\");\n\n                {\n                  /* let tests = this.state.listOfUsers.find(\n                  (el) => el._id === thread.user\n                ); */\n                }\n\n                {\n                  /* let usernameTest = this.state.listOfUsers.find(\n                  (user) => console.log(user) || user._id === thread.user\n                ); */\n                }\n\n                return (\n                  <div\n                    className=\"threadlist-individual-result\"\n                    key={thread._id}\n                  >\n                    <Link to={`/threads/${thread._id}`}>\n                      <h3>{thread.title}</h3>\n                    </Link>\n\n                  \n                    <Link to={`/profile/${th._id}`}>\n                      <h5>{name}</h5>\n                    </Link>\n\n                    <p>{thread.description} </p>\n                    <div className=\"threadlist-buttons\">\n                      <Link to={`/threads/${thread._id}`}>\n                        <p>Go to Post</p>\n                      </Link>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ThreadList;\n"]},"metadata":{},"sourceType":"module"}